// Parsing of ct-metrics lgos (metrics generated by Optiq core-trading components).
package ctmetrics

// Imports
import (
	"encoding/json"
	"fmt"
	"regexp"

	"github.com/frdrolland/pcaptool/dto/ctmetrics"
	"github.com/frdrolland/pcaptool/process"
)

var (
	InputRegex *regexp.Regexp = regexp.MustCompile("(?P<timestamp>.*)\\s+\\|\\s+(.*)\\s+\\|\\s+(.*)\\s+\\|\\s+(.*)\\s+\\|\\s+(.*)\\s+\\|\\s+Connectors\\.hpp\\:\\d+\\s+\\|\\s+(?P<json>(.*))")
)

// Tries to parse line as if it contains "Connectors" stats
func TryConnectorLine(s string) (string, bool) {

	// ok:

	n1 := InputRegex.SubexpNames()
	r2 := InputRegex.FindStringSubmatch(s)
	if nil == r2 {
		return "", false
	}

	md := map[string]string{}

	for i, n := range r2 {
		md[n1[i]] = n
	}

	extracted := md["json"]

	if "" == extracted {
		return "", false
	}

	newStat := ctmetrics.ConnectorStat{}
	if extracted != "" {
		err := json.Unmarshal([]byte(extracted), &newStat)
		if nil != err {
			fmt.Printf("ERROR while decoding JSON from file line %s - %s", extracted, err)
		}

		process.ProcessEvent(newStat)

	}

	return extracted, true
}
